[color]
    ui = true
    branch = true
    diff = true
    interactive = true
    status = true
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = green
    changed = red
    deleted = red
    untracked = yellow
[user]
    name = Cuddlemuffin007
    email = brennonkrogers@gmail.com
[push]
    default = matching
[alias]
    aliases = "!git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort"
    co = "checkout"
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    publish = "!git push -u origin $(git branch-name)"
    # Given a merge commit, find the span of commits that exist(ed) on that
    # branch. Again, not useful in itself, but used in other aliases.
    merge-span = "!f() { echo $(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f1)$1(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f2); }; f"

    # Find the commits that were introduced by a merge
    merge-log = "!git log `git merge-span .. $1`"
    # Show the changes that were introduced by a merge
    merge-diff = "!git diff `git merge-span ... $1`"
    # As above, but in your difftool
    merge-difftool = "!git difftool `git merge-span ... $1`"
    rebase-branch = "!git rebase -i `git merge-base master HEAD`"
    unstage = "reset HEAD --"
    delete-merged = "!git co master && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
    sync = "!git co master && git pull && git delete-merged && git remote prune origin"
    graph = "log --graph"
[core]
    excludesfile = ~/.gitignore_global
[init]
    templatedir = ~/dotfiles/custom-configs/git_template
	defaultBranch = main
